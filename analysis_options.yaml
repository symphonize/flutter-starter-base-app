# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
  errors:
    # Treat all warnings as errors
    missing_return: error
    unnecessary_cast: error
    unused_element: error
    unused_local_variable: error
    always_put_control_body_on_new_line: error
    curly_braces_in_flow_control_structures: error
custom_lint:
  debug: true
  verbose: true

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    ## General Dart best practices
    - always_declare_return_types
    - always_specify_types
    - annotate_overrides
    - avoid_classes_with_only_static_members
    - always_put_control_body_on_new_line
    - avoid_dynamic_calls
    - avoid_field_initializers_in_const_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_null_checks_in_equality_operators
    - avoid_print
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_setters_without_getters
    - avoid_slow_async_io
    - avoid_types_as_parameter_names
    - curly_braces_in_flow_control_structures
    - diagnostic_describe_all_properties
    - empty_catches
    - empty_constructor_bodies
    - file_names
    - invariant_booleans
    - join_return_with_assignment
    - library_prefixes
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_closures
    - only_throw_errors
    - overridden_fields
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_for_elements_to_map_fromIterable
    - prefer_generic_function_type_aliases
    - prefer_initializing_formals
    - prefer_interpolation_to_compose_strings
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_operators
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - recursive_getters
    - require_trailing_commas
    - slash_for_doc_comments
    - sort_child_properties_last
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_statements
    - unrelated_type_equality_checks
    - use_function_type_syntax_for_parameters
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
    - use_late_for_private_fields_and_variables
    - use_setters_to_change_properties
    - valid_regexps

    ## Flutter-specific rules
    - avoid_unnecessary_containers
    - avoid_multiple_declarations_per_line
    - avoid_positional_boolean_parameters
    - prefer_final_locals
    - prefer_is_empty
    - prefer_relative_imports
    - prefer_single_quotes
    - public_member_api_docs

    ## Documentation and comments
    - comment_references
